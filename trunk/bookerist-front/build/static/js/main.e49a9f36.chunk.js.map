{"version":3,"sources":["AgendaModal.js","Agenda.js","AccueilLoggedIn.js","Accueil.js","img/logo.png","Header.js","HeaderLoggedIn.js","Inscription.js","Contact.js","ForgotPass.js","Parametre.js","App.js","index.js"],"names":["AgendaModal","props","getHeaderTxt","dispo","rdv","evenement","state","eventType","handleChanges","e","name","target","value","setState","handleCheckboxChanges","checked","startTime","endTime","handleReset","allDay","startDate","endDate","other_users","users_invited","handleClose","handleCloseModal","handleSave","preventDefault","event","id","eventId","title","objet","extendedProps","user_mail","mail","type","description","start","end","color","textColor","modifier","handleChangeEvent","handleAddEvent","clearState","handleRemove","editable","eventText","window","confirm","user","find","index","indexOf","splice","renderEventDate","className","disabled","onChange","htmlFor","required","renderEventObjAndDescription","maxLength","autoComplete","generateDatalist","length","map","prenom","nom","_id","handleAddInvite","strInvite","document","getElementById","mailIndexes","strMailInvite","substring","invite","alreadyInvited","generateListeInvites","listeSorted","sort","user1","user2","toUpperCase","toString","replaceAll","renderEventTypeContent","content","list","onClick","colSpan","readOnly","getProps","alreadyFetched","this","prop","fetch","baseURL","method","headers","body","JSON","stringify","then","res","json","catch","err","console","log","headerTxt","onSubmit","Component","Agenda","calendarRef","React","createRef","clearEventType","handleModalChanges","handleDateSelection","selectionInfo","openModal","calendar","view","unselect","toMoment","format","current","getApi","addEvent","handleSaveEvent","addInfo","event_parsed","dateStart","startStr","dateEnd","endStr","backgroundColor","ok","message","handleEventChanged","changeInfo","changeEvent","eventInfos","old_event","getEventById","new_event","setProp","setExtendedProp","options","setDates","removeEvent","remove","handleEventRemoved","removeInfo","startEditable","handleEventClick","info","jsEvent","openEventClickMenu","user_events","getEvents","prevProps","prevState","all_events","modal","handleRemoveInvitation","removeInvitation","ref","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","momentPlugin","initialView","locale","firstDay","events","buttonText","today","month","week","day","headerToolbar","center","businessHours","daysOfWeek","selectable","selectMirror","eventResizableFromStart","select","eventAdd","eventChange","eventRemove","eventClick","AccueilLoggedIn","menuOpened","profilOpened","divClass","Accueil","gotoInscription","handlePage","inInscription","saveChanges","handleCanBeLogged","setUserInfos","connect","handleConnexion","mdp","response","status","data","alert","placeholder","href","Header","src","logo","alt","height","width","gotoMain","HeaderLoggedIn","useState","handlePageMenu","stopPropagation","page","pageName","handleEventMenu","giveEventType","useEffect","handleCloseMenus","handleMenus","addEventListener","removeEventListener","localStorage","clear","disconnect","Inscription","handleMailUpdate","toLowerCase","handleFirstNameUpdate","prenomMaj","charAt","slice","handleLastNameUpdate","handleInscriptionFinished","sendInscription","mail2","mdp2","reactDom","render","Contact","max","compteur_objet","compteur_message","handleChange","champ","nameCompteur","msg","handleFinishContact","setItem","sentContact","alreadySent","parse","getItem","contactMessage","onReset","ForgotPass","setMail","Parametre","newMail","newMdp","confirmNewMdp","changeMail","changeMdp","handleModifMail","bind","handleModifPass","handleMailChange","handleSubmitParams","handleNewInfos","handleChangeParams","userModif","error","App","loggedIn","inAccueil","inForgotPass","inContact","inParams","handleLoginChange","pages","undefined","handleMenusAccueil","menuState","handleEventType","header","ReactDOM"],"mappings":"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","file":"static/js/main.e49a9f36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './AgendaModal.css';\nimport './Button.css';\n// import moment from 'moment';\n\nconst baseURL = \"http://localhost:3001\";\n//Composant permettant d'afficher le modal pour créer un évènement dans l'agenda\nexport default class AgendaModal extends Component {\n    constructor(props){\n        super(props);\n\n        //Définission de l'état, par défaut le eventType sera disponibilité\n        this.state = {\n            editable: this.props.editable,\n            eventType: this.props.eventType && this.props.eventType !== '' ? this.props.eventType : \"dispo\",\n            eventId: this.props.eventId && this.props.eventId !== '' ? this.props.eventId : '',\n            allDay: this.props.allDay ? this.props.allDay : false,\n            startDate: '',\n            startTime: '',\n            endDate: '',\n            endTime: '',\n            objet: '',\n            description: '',\n            getProps: false, //pour ne récupérer les props qu'une fois\n            alreadyFetched: false,\n            mail: this.props.mail,\n            other_users: [],\n            users_invited: this.props.modifier ? this.props.users_invited : [],\n            modifier: this.props.modifier\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate(){\n        const listProps = [\"startDate\", \"startTime\", \"endDate\", \"endTime\", \"objet\", \"description\", \"users_invited\", \"eventId\", \"allDay\", \"editable\", \"mail\"];\n        if (!this.state.getProps)\n        {\n            for(let prop of listProps)\n            {\n                this.setState({\n                    [prop]: this.props[prop] ? this.props[prop] : this.state[prop]\n                });\n            }\n            this.setState({ getProps: true});\n        }\n        if ((this.state.eventType === \"evenement\" || this.state.eventType === \"rdv\") && !this.state.alreadyFetched)\n        {\n            fetch(baseURL + \"/users/get\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ mail: this.props.mail })\n            })\n            .then(res => res.json())\n            .then(res => {\n                this.setState({ other_users: res});\n            })\n            .catch(err => console.log(err));\n            this.setState({ alreadyFetched: true });\n        }\n        // let modal = document.getElementById(\"modal\");\n        // this.state.openModal ? modal.style.display = \"block\" : modal.style.display = \"none\";\n    }\n\n    clearState(){\n        this.setState({\n            eventType: this.props.eventType !== '' ? this.props.eventType : \"dispo\",\n            allDay: false,\n            startDate: '',\n            startTime: '',\n            endDate: '',\n            endTime: '',\n            getProps: false,\n            other_users: [],\n            users_invited: [],\n        })\n    }\n\n    //On génère le texte pour le header du modal en fonction de l'objet à créer\n    //Fonction fléchée pour accéder au this\n    getHeaderTxt = () => {\n        const eventTxt = {\n            dispo: \"Créer une nouvelle disponibilité\",\n            rdv: \"Créer un nouveau rendez-vous\",\n            evenement: \"Créer un nouvel évènement\",\n        };\n        return eventTxt[this.state.eventType];\n    }\n\n    //fonction fléchée pour accéder au this\n    handleChanges = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({\n            [name]: value,\n        });\n    }\n    //fonction fléchée pour accéder au this\n    handleCheckboxChanges = (e) => {\n        //pour l'instant seulement pour le allDay\n        const name = e.target.name;\n        const value = e.target.checked;\n        if (value === true)\n            this.setState({\n                startTime: '',\n                endTime: '',\n            });\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleReset = (e) => {\n        this.setState({\n            eventType: \"dispo\",\n            allDay: false,\n            startDate: '',\n            startTime: '',\n            endDate: '',\n            endTime: '',\n            other_users: [],\n            users_invited: [],\n        })\n    }\n\n    handleClose = (e) => {\n        // var modal = document.getElementById(\"modal\");\n        // modal.style.display = \"none\";\n        this.props.handleCloseModal();\n    }\n    \n   \n\n    handleSave = (e) => {\n        if (e)\n            e.preventDefault();\n        let event = {};\n\n        if (this.state.eventType === 'evenement')\n        {\n            event = {\n                id: this.state.eventId,\n                title: this.state.objet,\n                extendedProps: {\n                    user_mail: this.props.mail,\n                    users_invited: this.state.users_invited,\n                    type: this.state.eventType,\n                    description: this.state.description,\n                },\n                allDay: this.state.allDay,\n                start: (this.state.startDate + (!this.state.allDay ? \"T\" + this.state.startTime : '')),\n                end: (this.state.endDate + (!this.state.allDay ? \"T\" + this.state.endTime : '')),\n                color: \"rgb(177, 214, 153)\",\n                textColor: \"rgb(138, 74, 176)\"\n            }\n        }\n        if (this.state.modifier)\n            this.props.handleChangeEvent(event);\n        else\n            this.props.handleAddEvent(event);\n\n        this.clearState();\n        this.handleClose();\n    }\n\n    handleRemove = () => {\n        if (this.state.editable === true)\n        {\n            let text = {\n                dispo: \"cette disponibilité\",\n                rdv: \"ce rendez-vous\",\n                evenement: \"cet évènement\"\n            }\n            let eventText = \"Êtes-vous sûrs de vouloir supprimer \" + text[this.state.eventType] + \" ?\";\n            let confirmation = window.confirm(`${eventText}`);\n            if (confirmation)\n            {\n                this.props.handleRemove({ eventId: this.state.eventId });\n                this.clearState();\n                this.handleClose();\n            }\n        }\n        else\n        {\n            let text = {\n                rdv: \"ce rendez-vous\",\n                evenement: \"cet évènement\"\n            }\n            let eventText = \"Êtes-vous sûrs de vouloir annuler votre participation à \" + text[this.state.eventType] + \" ?\";\n            let confirmation = window.confirm(`${eventText}`);\n            if (confirmation)\n            {\n                let users_invited = this.state.users_invited;\n                let user = users_invited.find(user => user.mail === this.state.mail);\n                let index = users_invited.indexOf(user);\n                users_invited.splice(index, 1);\n                this.setState({ users_invited });\n                this.handleSave();\n                this.props.handleRemove({ eventId: this.state.eventId });\n                this.clearState();\n                this.handleClose();\n            }\n        }\n        \n    }\n\n    render(){\n        const headerTxt = this.getHeaderTxt();\n        const eventType = this.state.eventType ? this.state.eventType : \"dispo\";\n        return (\n            //L'ensemble du modal\n            <div className=\"agendaModal\" id=\"modal\">\n\n                {/* Le contenu du modal */}\n                <div className=\"agendaModal\" id=\"modal-content\">\n                    <header>\n                        <span className=\"close\" onClick={this.handleClose}>&times;</span>\n                        <h1>{headerTxt}</h1>\n                    </header>\n                    <form id=\"formInfosEvent\" onSubmit={this.handleSave}>\n                        <div id=\"type\">\n                            <label htmlFor=\"eventType\" id=\"labelType\">Type : </label>\n                            <select name=\"eventType\" className=\"listeType\" value={this.state.eventType} id={eventType} disabled={!this.state.editable} onChange={this.handleChanges}>\n                                <option value=\"dispo\">disponibilité</option>\n                                <option value=\"rdv\">rendez-vous</option>\n                                <option value=\"evenement\">évènement</option>\n                            </select>\n                        </div>\n                        {this.renderEventTypeContent()}\n                        <footer>\n                            <button type=\"button\" name=\"remove\" className={this.state.modifier ? \"modalButton\" : \"modalButton-invisible\"} id=\"remove\" onClick={this.handleRemove}>Supprimer</button>\n                            <input type=\"reset\" name=\"reset\" className=\"modalButton\" value=\"Réinitialiser\" disabled={!this.state.editable} onClick={this.handleReset}/>\n                            <button type=\"submit\" name=\"save\" className=\"modalButton\" id=\"save\" disabled={!this.state.editable}>Sauvegarder</button>\n                        </footer>\n                    </form>\n                </div>\n\n            </div>\n        );\n    };\n\n    renderEventDate = () => {\n        return (\n            <div id=\"div_date\">\n                {/* <table className=\"tableEventTypeContent\"> */}\n                <table className=\"tableEventDate\">\n                    <tbody>\n                        <tr className=\"tr_allday\">\n                            <td>\n                                <input type=\"checkbox\" name=\"allDay\" id=\"allDay\" value=\"allDay\" checked={this.state.allDay} disabled={!this.state.editable} onChange={this.handleCheckboxChanges}/>\n                            </td>\n                            <td>\n                                <label htmlFor=\"allDay\" name=\"labelAllDay\" id=\"labelAllDay\">Toute la journée</label>\n                            </td>\n                        </tr>\n                        <tr className=\"tr_startDate\">\n                            <td>\n                                <label htmlFor=\"startDate\">Date de début : </label>\n                            </td>\n                            <td>\n                                <input type=\"date\" name=\"startDate\" onChange={this.handleChanges}\n                                value={this.state.startDate} disabled={!this.state.editable} required />\n                                <input type=\"time\" name=\"startTime\" onChange={this.handleChanges}\n                                value={this.state.startTime} disabled={!this.state.editable || this.state.allDay}/>\n                            </td>\n                        </tr>\n                        <tr className=\"tr_endDate\">\n                            <td>\n                                <label htmlFor=\"endDate\">Date de fin : </label>\n                            </td>\n                            <td>\n                                <input type=\"date\" name=\"endDate\" onChange={this.handleChanges}\n                                value={this.state.endDate} disabled={!this.state.editable} required />\n                                <input type=\"time\" name=\"endTime\" onChange={this.handleChanges}\n                                value={this.state.endTime} disabled={!this.state.editable || this.state.allDay}/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            \n        );      \n    }\n\n    renderEventObjAndDescription = () => {\n        return (\n            <div>\n            <table className=\"table_Obj_description\">\n                <tbody>\n                    <tr className=\"tr_obj\">\n                        <td>\n                            <label htmlFor=\"inputObj\">Objet : </label>\n                        </td>\n                        <td>\n                            <input type=\"text\" name=\"objet\" id=\"inputObj\" maxLength=\"30\" value={this.state.objet} autoComplete=\"off\" disabled={!this.state.editable} onChange={this.handleChanges}  required />\n                        </td>\n                    </tr>\n                    <tr className=\"tr_description\">\n                        <td>\n                            <label htmlFor=\"inputDescription\">Description : </label>\n                        </td>\n                        <td>\n                            <textarea name=\"description\" id=\"inputDescription\" maxLength=\"130\" value={this.state.description} disabled={!this.state.editable} onChange={this.handleChanges} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n        );\n    }\n\n    generateDatalist = () => {\n        if (this.state.other_users.length > 0)\n        {\n            let tabUsers = this.state.other_users;\n            let list = tabUsers.map(user => {\n                return(<option key={user._id} value={user.prenom + \" \" + user.nom + \" <\" + user.mail + \">\"} />);\n            })\n            return list;\n        }\n        return null;\n    }\n\n     //arrow fct to bind 'this'\n    handleAddInvite = () => {\n        let strInvite = document.getElementById('searchBarInvite').value;\n        if (strInvite && strInvite !== '')\n        {\n            let mailIndexes = [strInvite.indexOf(\"<\") + 1 , strInvite.indexOf(\">\")]\n            let strMailInvite = strInvite.substring(mailIndexes[0], mailIndexes[1]);\n            let invite = this.state.other_users.find(user => user.mail === strMailInvite);\n            let alreadyInvited = this.state.users_invited.find(user => user._id === invite._id) ? true : false;\n            //on remet la search bar à vide\n            document.getElementById('searchBarInvite').value=\"\";\n            if (!alreadyInvited)\n                this.setState({ users_invited: [...this.state.users_invited, invite] });\n        }\n\n    }\n\n    generateListeInvites = () => {\n        let liste = this.state.users_invited;\n        //on trie dans l'ordre alphabétique par NOM\n        //la fonction sort place el1 avant el2 si la foncion de tri renvoie un nb < 0,\n        //place el2 avant el1 si la fonction de tri renvoie un nb > 0\n        let listeSorted = liste.sort((user1, user2) => {\n            if (user1.nom.toUpperCase() < user2.nom.toUpperCase())\n                return -1;\n            else if (user1.nom.toUpperCase() > user2.nom.toUpperCase())\n                return 1;\n            return 0;\n        })\n        //on transforme la liste en ce qu'on veut afficher\n        listeSorted = listeSorted.map((user) => {\n            return user.prenom + \" \" + user.nom + \" <\" + user.mail + \">\\n\"\n        });\n        //on retourne le tableau sous forme de string en enlevant les virgules\n        return listeSorted.toString().replaceAll(',', '');\n    }\n    //fonction pour afficher les informations à remplir en fontion du type d'objet à créer\n    //fonction fléchée pour accéder au this\n    renderEventTypeContent = () => {\n        let content = null;\n        //la variable content contiendra le contenu à afficher en fonction de la valeur de\n        //eventType dans l'état local\n        if(this.state.eventType === false || this.state.eventType === \"dispo\")\n        {\n            content = (\n                <div className=\"eventTypeContent\">\n                    {this.renderEventDate()}\n                </div>\n            );\n        }\n        else if (this.state.eventType === \"evenement\")\n        {\n            content = (\n                <div className=\"eventTypeContent\">\n                    {this.renderEventObjAndDescription()}\n                    {this.renderEventDate()}\n                    <table className=\"tableEventTypeContent_evenement\">\n                        <tbody>\n                            <tr className=\"searchInvites\">\n                                <td>\n                                    <label htmlFor=\"labelSearchInvites\">Personnes à inviter à l'évènement : </label>\n                                </td>\n                                <td>\n                                    <input list=\"usersList\" name=\"searchBarInvite\" className=\"searchBar\" id=\"searchBarInvite\"\n                                    disabled={!this.state.editable} onChange={this.handleChanges}\n                                    autoComplete=\"off\"\n                                    />\n\n                                    <datalist id=\"usersList\">\n                                        {this.generateDatalist()}\n                                    </datalist>\n\n                                    <button type=\"button\" name=\"addButtonInvite\" className=\"addButton\" id=\"addButtonInvite\"\n                                    onClick={this.handleAddInvite}\n                                    />\n                                    {/* <input type=\"search\" /> */}\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"liste_invites\" id=\"liste_invites_label\" colSpan=\"2\">\n                                    <label htmlFor=\"liste_invites\">Personnes invitées : </label>\n                                </td>\n                            </tr>\n                            <tr id=\"tr_liste_invites_content\">\n                                <td className=\"liste_invites\" id=\"liste_invites_content\" colSpan=\"2\">\n                                    <textarea name=\"liste_invites\" id=\"liste_invites\" readOnly disabled\n                                    value={this.generateListeInvites()} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        return content;\n    }\n}","import FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport momentPlugin, { toMoment } from '@fullcalendar/moment';\n// import moment from 'moment';\nimport React, { Component } from 'react'\nimport './Agenda.css';\nimport AgendaModal from './AgendaModal';\n\nconst baseURL = \"http://localhost:3001\";\n\nexport default class Agenda extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            \n            mail: this.props.mail,\n            eventType: '',\n            openModal: false,\n            openEventClickMenu: false,\n            objet: '',\n            description: '',\n            startDate: '',\n            startTime: '',\n            endDate: '',\n            endTime: '',\n            allDay: false,\n            eventId: '',\n            users_invited: [],\n            modifier: false,\n            editable: true,\n            user_events: [],\n            getEvents: false, //doit-on récupérer les evenements dans la bdd ?\n        }\n    }\n    calendarRef = React.createRef(); //on donne cette reference au calendrier pour toujours l'avoir et pouvoir utiliser les methodes de l'api\n\n    componentDidMount(){\n        //quand le composant est monté, on veut récupérer les données d'events dans la bdd\n        this.setState({ getEvents: true });\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(this.props.eventType && this.props.eventType !== this.state.eventType)\n        {\n            this.setState({\n                eventType: this.props.eventType,\n                openModal: true,\n            });\n        }\n        if (prevProps && prevProps.mail !== this.props.mail)\n        {\n            this.setState({ mail: this.props.mail });\n        }\n\n        //Récupération de tous les events dans la bdd\n        if (this.state.getEvents)\n        {\n            this.setState({ getEvents: false });\n            fetch(baseURL + \"/events/get\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({mail: this.state.mail })\n            })\n            .then((res) => {\n                if (res.ok)\n                {\n                    res.json().then((res) => {\n                        //récupération des events crées par l'utilisateur + où l'utilisateur est invité\n                        let all_events = res.all_events;\n                        this.setState({ user_events: all_events });\n                        // console.log(\"fetch réussi : \", res.message);\n                    })\n                }\n                else{\n                    res.json().then(res => {\n                        console.log(\"Mauvaise réponse réseau : \", res.message);\n                    });\n                    \n                }\n            })\n            .catch(err => console.log(\"erreur lors de la récupération des events dans la BDD : \" + err.message));\n        }\n        \n    }\n\n    clearState(){\n        this.setState({\n            eventType: '',\n            openModal: false,\n            openEventClickMenu: false,\n            objet: '',\n            description: '',\n            startDate: '',\n            startTime: '',\n            endDate: '',\n            endTime: '',\n            allDay: false,\n            eventId: '',\n            users_invited: [],\n            modifier: false,\n            editable: true,\n        })\n    }\n    //fonction fléchée pour accéder au this\n    handleCloseModal = () => {\n        this.props.clearEventType();\n        this.clearState();\n    }\n\n    handleModalChanges = (state) => {\n        this.setState(state);\n    }\n\n    handleDateSelection = (selectionInfo) => {\n        this.setState({ openModal: true });\n        let calendar = selectionInfo.view.calendar;\n        calendar.unselect();\n        let start = toMoment(selectionInfo.start, calendar);\n        let end = toMoment(selectionInfo.end, calendar);\n        this.setState({\n            startDate: start.format(\"YYYY-MM-DD\"),\n            startTime: start.format(\"HH:mm\"),\n            endDate: end.format(\"YYYY-MM-DD\"),\n            endTime: end.format(\"HH:mm\"),\n        });\n    }\n\n    handleAddEvent = (event) => {\n        let calendar = this.calendarRef.current.getApi();\n        calendar.addEvent(event);\n        this.clearState();\n    }\n\n    handleSaveEvent = (addInfo) => {\n        this.clearState();\n        let event = addInfo.event;\n        let event_parsed = {\n            user_mail: event.extendedProps.user_mail,\n            users_invited: event.extendedProps.users_invited,\n            allDay: event.allDay,\n            dateStart: event.startStr,\n            dateEnd: event.endStr,\n            objet: event.title,\n            description: event.extendedProps.description,\n            color: event.backgroundColor,\n            textColor: event.textColor,\n            type: event.extendedProps.type\n        }\n        let id = event.id;\n        fetch(baseURL + \"/event/save\", {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ event_parsed, id })\n        })\n        .then(res => {\n            if (res.ok)\n                res.json().then(res => {\n                    console.log(\"envoi reussi : \" + res.message);\n                })\n            else\n                res.json().then(res => {\n                    console.log(\"Mauvaise reponse reseau : \" + res.message);\n                })\n        })\n        .catch(err => console.log(\"erreur lors de l'envoi d'un event dans BDD : \" + err));\n    }\n\n    handleEventChanged = (changeInfo) => {\n        this.handleSaveEvent(changeInfo);\n    }\n\n    changeEvent = (eventInfos) => {\n        let old_event = this.calendarRef.current.getApi().getEventById(eventInfos.id);\n        let new_event = eventInfos;\n        \n        if (new_event.title !== old_event.title)\n            old_event.setProp('title', new_event.title);\n        if (new_event.extendedProps.description !== old_event.extendedProps.description)\n            old_event.setExtendedProp('description', new_event.extendedProps.description);\n        if (new_event.start !== old_event.start || new_event.end !== old_event.end || new_event.allDay !== old_event.allDay)\n        {\n            let options = {allDay: new_event.allDay};\n            old_event.setDates(new_event.start, new_event.end, options);\n        }\n        if (new_event.extendedProps.users_invited !== old_event.extendedProps.users_invited)\n            old_event.setExtendedProp('users_invited', new_event.extendedProps.users_invited);\n    }\n\n    removeEvent = ({eventId}) => {\n        let event = this.calendarRef.current.getApi().getEventById(eventId);\n        event.remove();\n    }\n\n    handleEventRemoved = (removeInfo) => {\n        let event = removeInfo.event\n        if (event.startEditable)\n        {\n            fetch(baseURL + \"/event/remove\", {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(event)\n            })\n            .then(res => {\n                if (res.ok)\n                    res.json().then(res => {\n                        console.log(\"suppression reussie : \" + res.message);\n                    })\n                else\n                    res.json().then(res => {\n                        console.log(\"Mauvaise reponse reseau : \" + res.message);\n                    })\n            })\n            .catch(err => console.log(\"erreur lors de la suppression d'un event dans BDD : \" + err));\n        }\n    }\n\n    handleEventClick = (info) => {\n        info.jsEvent.preventDefault();\n        let event = info.event;\n        this.setState({ openModal: true, eventType: event.extendedProps.type, modifier: true, editable: event.startEditable });\n        let start = toMoment(event.start, info.view.calendar);\n        let end = toMoment(event.end, info.view.calendar);\n        this.setState({\n            objet: event.title,\n            description: event.extendedProps.description,\n            allDay: event.allDay,\n            startDate: start.format(\"YYYY-MM-DD\"),\n            startTime: start.format(\"HH:mm\"),\n            endDate: end.format(\"YYYY-MM-DD\"),\n            endTime: end.format(\"HH:mm\"),\n            eventId: event.id,\n            users_invited: event.extendedProps.users_invited,\n        });\n    }\n\n    render() {\n        const modal = this.state.openModal\n                        ?(\n                            <AgendaModal \n                            handleCloseModal={this.handleCloseModal}\n                            handleAddEvent={this.handleAddEvent}\n                            handleRemove={this.removeEvent}\n                            handleRemoveInvitation={this.removeInvitation}\n                            handleChangeEvent={this.changeEvent}\n                            editable={this.state.editable}\n                            eventId={this.state.eventId}\n                            objet={this.state.objet}\n                            description={this.state.description}\n                            startDate={this.state.startDate}\n                            startTime={this.state.startTime}\n                            endDate={this.state.endDate}\n                            endTime={this.state.endTime}\n                            allDay={this.state.allDay}\n                            eventType={this.state.eventType}\n                            modifier={this.state.modifier}\n                            users_invited={this.state.users_invited}\n                            mail={this.state.mail}\n                            />\n                        )\n                        : null;\n\n        // const eventClickMenu = this.state.openEventClickMenu ? this.renderEventClickMenu() : null;\n\n        return (\n            <div className=\"divFullCalendar\">\n\n                {modal}\n                <FullCalendar\n                ref={this.calendarRef}\n                plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin, momentPlugin ]}\n                initialView=\"dayGridMonth\"\n                locale='fr'\n                firstDay={1}\n                events={this.state.user_events}\n                buttonText={{\n                    today: \"aujourd'hui\",\n                    month: \"mois\",\n                    week: \"semaine\",\n                    day: \"jour\"\n                }}\n                headerToolbar={{\n                    start: 'prev,next,today',\n                    center: 'title',\n                    end: 'dayGridMonth,timeGridWeek,timeGridDay'\n                }}\n                businessHours={[\n                    {\n                        daysOfWeek: [1, 2, 3, 4, 5],\n                        startTime: '08:00',\n                        endTime: '19:00'\n                    }\n                ]}\n                selectable={true}\n                selectMirror={true}\n                editable={true}\n                eventResizableFromStart={true}\n                select={this.handleDateSelection}\n                // eventsSet={this.handleEventsSet}\n                eventAdd={this.handleSaveEvent}\n                eventChange={this.handleEventChanged}\n                eventRemove={this.handleEventRemoved}\n                eventClick={this.handleEventClick}\n                />\n            </div>\n        )\n    }\n}\n","import './AccueilLoggedIn.css';\nimport React, { Component } from 'react';\nimport Agenda from './Agenda';\n\n\n// const baseURL = \"http://localhost:3001\";\n\nclass AccueilLoggedIn extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      mail: this.props.mail,\n      eventType: '',\n      menuOpened: false,\n      profilOpened: false,\n    }\n  }\n  \n  componentDidUpdate(prevProps){\n   const menuOpened = this.props.menuOpened;\n   const profilOpened = this.props.profilOpened;\n   if (prevProps.menuOpened !== menuOpened || prevProps.profilOpened !== profilOpened){\n     this.setState({ menuOpened, profilOpened });\n   }\n  \n   if (this.props.eventType !== this.state.eventType)\n   {\n      this.setState({ eventType: this.props.eventType });\n   }\n   if (prevProps.mail !== this.props.mail)\n   {\n     this.setState({ mail: this.props.mail });\n   }\n }\n\n clearEventType = () => {\n   this.setState({\n     eventType: '',\n   });\n   this.props.clearEventType();\n }\n\n  render() {\n    const divClass = this.state.menuOpened ? 'menuOpened' : (this.state.profilOpened ? 'profilOpened' : '');\n    \n    return (\n    <div id=\"accLoggedIn\" className={divClass}>\n      <Agenda\n      eventType={this.state.eventType}\n      clearEventType={this.clearEventType}\n      mail={this.state.mail}\n      />\n    </div>\n\n    );\n  }\n}\n\nexport default AccueilLoggedIn;","import React, {Component} from 'react';\nimport './Accueil.css';\nimport './Button.css';\n//import Calendrier from './Calendrier';\n\nconst baseURL = \"http://localhost:3001\";\n\nclass Accueil extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            mail: '', \n            mdp: ''\n        };\n    }\n\n    gotoInscription = () =>{\n        this.props.handlePage({ inInscription: true });\n    }\n\n    saveChanges = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [name]: value })\n    }\n\n    handleCanBeLogged = (prenom, nom, mail) => {\n        this.props.setUserInfos(prenom, nom, mail);\n        this.props.connect();\n    }\n\n    handleConnexion = event => {\n        event.preventDefault();\n\n        let user = {\n            mail: this.state.mail,\n            mdp: this.state.mdp\n        }\n\n        fetch(baseURL + \"/connect\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n         .then(response => response.json().then(res => ({ status: response.status, data: res })))\n         .then(res => {\n             if (res.status === 400)\n                alert(res.data.message);\n            if (res.status === 200)\n                //console.log(res.data.name);\n                this.handleCanBeLogged(res.data.prenom, res.data.nom, res.data.mail);\n        })\n        .catch(err => {\n            alert(\"Erreur : \" + err);\n        })\n    }\n\n    render() {\n        return (\n                <div className=\"corps\">\n\n                    <div className=\"formulaire\">\n                        <form name=\"formConnexion\" id=\"formConnexion\" onSubmit={this.handleConnexion}>\n\n                            <input type=\"email\" id=\"email\" name=\"mail\" placeholder=\"login (email)\" required\n                            onChange={this.saveChanges} /> <br />\n\n                            <input type=\"password\" id=\"pwd\" name=\"mdp\" placeholder=\"mot de passe\" required\n                            onChange={this.saveChanges} /> <br />\n\n                            <input type=\"submit\" id=\"connect\" value=\"Connexion\" /><br />\n\n                            <a href=\"none\" id=\"pwdforgot\">Mot de passe oublié ?</a>\n\n                            <div className=\"divInscription\">\n                                <button type=\"button\" id=\"inscription\" onClick={this.gotoInscription}>Inscription</button>\n                            </div>\n                        </form>\n                    </div>\n\n                    {/* <div className=\"calendrier\">\n                        <Calendrier />\n                    </div> */}\n                </div>\n        );\n    }\n}\n\nexport default Accueil;","export default __webpack_public_path__ + \"static/media/logo.a22bb596.png\";","import logo from './img/logo.png';\nimport './Header.css';\n\nconst Header = (props) => {\n    const handleGotoMain = () => {\n        props.gotoMain();\n    }\n    return (\n        <header className=\"header\">\n            <img className=\"logo\" src={logo} alt=\"logo\" height=\"32\" width=\"32\" onClick={handleGotoMain}/>\n            <h1 id=\"titreHeader\">BOOKERIST</h1>\n        </header>\n    )\n}\n\nexport default Header;","import './HeaderLoggedIn.css';\nimport './Button.css';\nimport logo from './img/logo.png';\nimport React, { useEffect, useState } from 'react';\n\nexport default function HeaderLoggedIn(props) {\n  const [state, setState] = useState({\n    menuOpened: false,\n    profilOpened: false,\n  });\n  // const [eventType, setEventType] = useState(\"\");\n\n  // const {handleMenus} = props.handleMenus();\n  //A chaque fois que le state est modifié et qu'un menu est ouvert, on vérifie si on clique en dehors du menu\n  useEffect(() => {\n    function handleCloseMenus(){\n      props.handleMenus({ menuOpened: false, profilOpened: false});\n      setState({\n        ...state,\n        menuOpened: false,\n        profilOpened: false,\n      });\n\n    }\n\n    if (state.profilOpened || state.menuOpened){\n      window.addEventListener('click', handleCloseMenus);\n    }\n    return function (){\n      window.removeEventListener('click', handleCloseMenus);\n    }\n  });\n\n  function toggleProfil (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    props.handleMenus({ profilOpened : !state.profilOpened })\n    setState(state => {\n        return {\n          ...state,\n          profilOpened: !state.profilOpened,\n        }\n      });\n  }\n\n  function toggleMenu(event){\n    event.preventDefault();\n    event.stopPropagation();\n    props.handleMenus({ menuOpened: !state.menuOpened });\n    setState(state => {\n      return {\n        ...state,\n        menuOpened: !state.menuOpened,\n      }\n    });\n  }\n\n  function handleDisconnect (e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    //on supprime les données sauvegardées en local de l'utilisateur puis on le déconnecte\n    localStorage.clear();\n    props.disconnect();\n  }\n\n  function handleGotoMain(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setState({\n      menuOpened: false,\n      profilOpened: false,\n    });\n    props.gotoMain();\n    \n  }\n\n  function handlePageMenu(e){\n    e.preventDefault();\n    e.stopPropagation();\n    const page = e.target.name;\n    const pageName = `in${page}`\n    setState({\n      menuOpened: false,\n      profilOpened: false,\n    });\n    props.handlePage({ [pageName]: true });\n  }\n\n  function handleEventMenu(e){\n    e.preventDefault();\n    // setEventType(e.target.name);\n\n    props.giveEventType({eventType: e.target.name});\n  }\n\n  return (\n    <header className=\"headerLoggedIn\">\n\n      \n\n      <ul className=\"menu\">\n          <li id=\"liMenu\">\n            <a href='none' onClick={toggleMenu}>MENU</a>\n              {state.menuOpened\n              ? (\n                <ul id=\"choixMenu\">\n                  <li>\n                    <a href='none' name=\"Accueil\" onClick={handlePageMenu}>Accueil</a>\n                  </li>\n                  <li>      \n                    <a href='none' name=\"dispo\" onClick={handleEventMenu}>Ajout disponibilité</a>\n                  </li>\n                  <li>\n                    <a href='none' name=\"rdv\" onClick={handleEventMenu}>Prendre rendez-vous</a>\n                  </li>        \n                  <li>\n                    <a href='none' name=\"evenement\" onClick={handleEventMenu}>Créer évènement</a>\n                  </li>\n                  <li>\n                    <a href='none' name=\"Manuel\" onClick={handlePageMenu}>Manuel d'utilisation</a>\n                  </li>\n                  <li>\n                    <a href='none' name=\"Contact\" onClick={handlePageMenu}>Contact</a>\n                  </li>        \n                </ul>\n              )\n              : (null)\n              }\n          </li>\n          <li>\n            <img id=\"logoLoggedIn\" src={logo} alt=\"logo\" width=\"32\" height=\"32\"\n            onClick={handleGotoMain} />\n          </li>\n          <li id=\"liProfil\">\n            <a href=\"none\" onClick={toggleProfil}>{props.prenom.toUpperCase()} ({props.mail})</a>\n            {state.profilOpened\n            ? (\n              <ul id=\"choixProfil\">\n              <li>\n                <a href=\"none\" name=\"Params\" onClick={handlePageMenu}>Paramètres</a>\n              </li>\n              <li>\n                <a href=\"none\" onClick={handleDisconnect}>Se déconnecter</a>\n              </li>\n            </ul>\n            )\n            : (null)\n            }\n          </li>\n        </ul>\n    </header>\n  );\n}","import './Inscription.css'\nimport React, { Component } from 'react'\nimport reactDom from 'react-dom'\nimport App from './App'\nimport './Button.css'\n\nconst baseURL = \"http://localhost:3001\";\n\nclass Inscription extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            nom: '',\n            prenom: '',\n            mail: '',\n            mail2: '',\n            mdp: '',\n            mdp2: ''\n        }\n    }\n\n    //fx flechée pour acceder au this\n    saveChanges = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({ [name]: value });\n    }\n\n    handleMailUpdate = event => {\n        //automatiquement mettre le mail en minuscules\n        this.setState({ mail: event.target.value.toLowerCase() })\n    }\n\n    handleFirstNameUpdate = (event) => {\n        let prenom = event.target.value;\n        let prenomMaj = prenom.charAt(0).toUpperCase() + prenom.slice(1);\n        this.setState({ prenom: prenomMaj });\n    }\n\n    handleLastNameUpdate = (event) => {\n        this.setState({ nom: event.target.value.toUpperCase() });\n    }\n\n    handleInscriptionFinished = () => {\n        this.props.gotoMain();\n    }\n\n    //fx flechée pour acceder au this\n    sendInscription = event => {\n        event.preventDefault()\n        //destsructuration pour + de lisibilite\n        const {nom, prenom, mail, mail2, mdp, mdp2} = this.state;\n\n        if (mail !== mail2){\n            alert(\"Les deux mails ne correspondent pas.\");\n        }\n        if (mdp !== mdp2){\n            alert(\"Les deux mots de passe ne correspondent pas.\");\n        }\n        else if (mail === mail2 && mdp === mdp2){\n            let user = {\n                nom: nom,\n                prenom: prenom,\n                mail: mail,\n                mdp: mdp\n            };\n            fetch(baseURL + \"/inscription\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(user)\n            })\n            .then(res => res.json().then(response => ({status: res.status, data: response})))\n            .then(res => {\n                alert(res.data.message);\n                if (res.status === 201){\n                    this.handleInscriptionFinished();\n                    reactDom.render(\n                        <App />,\n                        document.getElementById('root')\n                    );\n                }\n            })\n            .catch(err => {\n                // alert(\"Un problème est survenu lors de la connexion à la base de donnée. \")\n                console.log(err);\n            });\n        }\n    }\n\n    render() {    \n        return (\n            <div className=\"Inscription\">\n                <form className=\"formInscription\" name=\"formInscription\" onSubmit={this.sendInscription}>\n                    <fieldset>\n                        <h2>Inscription</h2>\n\n                        <input type=\"text\" id=\"prenom\" name=\"prenom\" placeholder=\"Prénom\" required\n                        onChange={this.handleFirstNameUpdate}\n                        value={this.state.prenom} />\n\n                        <input type=\"text\" id=\"nom\" name=\"nom\" placeholder=\"NOM\" required\n                        onChange={this.handleLastNameUpdate}\n                        value={this.state.nom} />\n\n                        <input type=\"email\" id=\"mail\" name=\"mail\" placeholder=\"e-mail\" required\n                        onChange={this.handleMailUpdate}\n                        value={this.state.mail} />\n\n                        <input type=\"email\" id=\"mail2\" name=\"mail2\" placeholder=\"confirmer e-mail\" required \n                        onChange={this.saveChanges} />\n\n                        <input type=\"password\" id=\"mdp\" name=\"mdp\" placeholder=\"mot de passe\" required\n                        onChange={this.saveChanges} />\n\n                        <input type=\"password\" id=\"confirmMdp\" name=\"mdp2\" placeholder=\"confirmer mot de passe\" required\n                        onChange={this.saveChanges} />\n\n                        <input type=\"submit\" id=\"goInscription\" value=\"Je m'inscris !\" />\n\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Inscription;","import React, { useState } from \"react\";\r\nimport './Contact.css';\r\nimport './Button.css';\r\n\r\nexport default function Contact(props){\r\n    const baseURL = \"http://localhost:3001\";\r\n    const max = {\r\n        objet: 70,\r\n        message: 2000,\r\n    }\r\n    const [state, setState] = useState({\r\n        objet: '',\r\n        message: '',\r\n        compteur_objet: max.objet,\r\n        compteur_message: max.message,\r\n    });\r\n\r\n    function handleChange(e){\r\n        const champ = e.target.name;\r\n        const value = e.target.value;\r\n        const nameCompteur = `compteur_${champ}`;\r\n        const maxLength = `${champ === 'objet' ? max.objet : max.message}`;\r\n\r\n        if (value.length <= maxLength){            \r\n            setState(state => { \r\n                return {\r\n                    ...state,\r\n                    [champ]: value,\r\n                    [nameCompteur]: maxLength - value.length,\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            const msg = \"Nombre de caractères max atteint pour \"`${champ === 'objet' ? \"l'objet\" : \"le message.\"}`;\r\n            alert(msg);\r\n        }\r\n    }\r\n\r\n    function handleSubmitMessage(e){\r\n        e.preventDefault();\r\n\r\n        const alreadySent = JSON.parse(window.localStorage.getItem('contactSent'));\r\n        //on vérifie d'abord que l'utilisateur n'a pas encore envoyé de message pour éviter les spams.\r\n        if (alreadySent !== null && alreadySent.sentContact === true){\r\n            alert(\"Vous avez déjà envoyé un message de contact.\");\r\n            handleFinishContact();\r\n        }\r\n        else {\r\n            let contactMessage = {\r\n                mail: props.mail,\r\n                prenom: props.prenom,\r\n                nom: props.nom,\r\n                objet: state.objet,\r\n                message: state.message,\r\n            }\r\n\r\n            fetch(baseURL + \"/contact\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(contactMessage),\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                alert(res.message);\r\n                handleFinishContact();\r\n            })\r\n            .catch(err => {\r\n                alert(\"Erreur : \" + err);\r\n            });\r\n        }\r\n    }\r\n    \r\n    function handleFinishContact(){\r\n        setState({\r\n            objet: '',\r\n            message: '',\r\n            compteur_objet: max.objet,\r\n            compteur_message: max.message,\r\n        });\r\n        window.localStorage.setItem('contactSent', JSON.stringify({ sentContact: true }));\r\n        props.gotoMain();\r\n    }\r\n\r\n    function handleReset(e){\r\n        e.preventDefault();\r\n        setState({\r\n            objet: '',\r\n            message: '',\r\n            compteur_objet: max.objet,\r\n            compteur_message: max.message,\r\n        })\r\n    }\r\n    return(\r\n        <div id=\"corps_contact\">\r\n            <h2 id=\"titre_contact\">Contact</h2>\r\n            <form method=\"post\" className=\"Contact\" id=\"formMessage\" onSubmit={handleSubmitMessage} onReset={handleReset}>\r\n                <p className=\"txtMessage\">Pour nous contacter, écrivez-nous un message :</p>\r\n                <br/>\r\n                <div className=\"divObjet\">\r\n                    <textarea name=\"objet\" id=\"objet\" placeholder=\"Objet\" value={state.objet} onChange={handleChange} required />\r\n                    <span id=\"compteurObjet\">{state.compteur_objet}</span>\r\n                </div>\r\n                <div className=\"divMessage\">\r\n                    <textarea name=\"message\" id=\"message\" placeholder=\"Message\" value={state.message} onChange={handleChange} required />\r\n                    <span id=\"compteurMessage\">{state.compteur_message}</span>\r\n                </div>\r\n                <br/>\r\n                <input className=\"bouton_contact\" type=\"reset\" value=\"Tout effacer\"></input>\r\n                <input className=\"bouton_contact\" type=\"submit\" value=\"Envoyer\"></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport \"./ForgotPass.css\"  \r\nconst baseURL=\"http://localhost:3001/\";\r\n\r\nconst ForgotPass = ()=>{\r\n    const [mail, setMail] = useState('');\r\n\r\n    function saveChanges(event){\r\n        setMail(event.target.value.toLowerCase())\r\n    }\r\n\r\n    function handleForgetPass(event){\r\n        event.preventDefault()\r\n        fetch(baseURL+'/forgotPass',{ \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(mail)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"forgotPass\">\r\n            <h2>Mot de passe oublié </h2>\r\n            <form id=\"formulaireMDP\" onSubmit={handleForgetPass}>\r\n            <br/>\r\n            <input type=\"email\" id=\"mailForgotPass\" name=\"mailForgotPass\" placeholder=\"e-mail\" \r\n            onChange={saveChanges} \r\n            value={mail}\r\n            required/>\r\n            <br/>\r\n            <input className=\"bouton_forgotPass\" type=\"submit\" value=\"Envoyer\"></input>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ForgotPass; \r\n\r\n\r\n\r\n        \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n","import React, { Component } from \"react\";\r\nimport './Parametre.css'\r\n\r\nconst baseURL = \"http://localhost:3001\"\r\n\r\nclass Parametre extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            mail: this.props.mail,\r\n            newMail: this.props.mail,\r\n            mdp: \"\",\r\n            newMdp: \"\",\r\n            confirmNewMdp: \"\",\r\n            changeMail: false,\r\n            changeMdp: false,\r\n        }\r\n        this.handleModifMail= this.handleModifMail.bind(this)\r\n        this.handleModifPass= this.handleModifPass.bind(this)\r\n        this.handleMailChange= this.handleMailChange.bind(this)\r\n        this.handleReset = this.handleReset.bind(this)\r\n        this.handleSubmitParams = this.handleSubmitParams.bind(this)\r\n        this.handleChanges = this.handleChanges.bind(this)\r\n        this.clearState = this.clearState.bind(this)\r\n        this.handleNewInfos = this.handleNewInfos.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.mail !== this.state.mail){\r\n            this.setState({\r\n                mail: this.props.mail,\r\n                newMail: this.props.mail,\r\n            })\r\n        }\r\n    }\r\n\r\n    clearState(){\r\n        this.setState({\r\n            mail: this.props.mail,\r\n            newMail: this.props.mail,\r\n            mdp: \"\",\r\n            newMdp: \"\",\r\n            confirmNewMdp: \"\",\r\n            changeMail: false,\r\n            changeMdp: false,\r\n        })\r\n    }\r\n\r\n    handleModifMail(event) {\r\n        this.setState({\r\n            changeMail: true,\r\n        })\r\n    }\r\n\r\n    handleModifPass(event){\r\n        this.setState({\r\n            changeMdp: true,\r\n        })\r\n    }\r\n\r\n    handleMailChange(event){\r\n        this.setState({\r\n            newMail: event.target.value.toLowerCase()\r\n        })\r\n    }\r\n\r\n    handleReset(event){\r\n        // this.setState({\r\n        //     mail: this.props.mail,\r\n        //     changeMail: false,\r\n        //     changeMdp: false,\r\n        //})\r\n        this.clearState()\r\n    }\r\n\r\n\r\n    handleNewInfos(newMail){\r\n        this.props.handleChangeParams(newMail)\r\n    }\r\n\r\n\r\n    handleSubmitParams(event){\r\n        event.preventDefault()\r\n        if(this.state.newMdp === this.state.confirmNewMdp){\r\n            let userModif = {\r\n                mail: this.state.mail,\r\n                newMail: this.state.newMail,\r\n                mdp: this.state.mdp,\r\n                newMdp: this.state.newMdp,\r\n                changeMail: this.state.changeMail,\r\n                changeMdp: this.state.changeMdp,\r\n            }\r\n            this.clearState()\r\n            console.log(userModif)\r\n            fetch(baseURL + \"/params\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userModif)\r\n            })\r\n            .then(response => response.json().then(res => ({ status: response.status, data: res })))\r\n            .then(res => {\r\n                alert(res.data.message)\r\n                if(res.status === 200)\r\n                {\r\n                    console.log(\"infos\")\r\n                    this.handleNewInfos(res.data.mail)\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        }else {\r\n            alert(\"Les deux mots de passes ne correspondent pas.\")\r\n        }\r\n    }\r\n\r\n    handleChanges(event){\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    }\r\n\r\n    render() {       \r\n        return(\r\n        <div className=\"parametre\">\r\n            <form id=\"formParams\" method=\"post\" onSubmit={this.handleSubmitParams}>\r\n                <h2>Paramètre</h2>\r\n                <input className=\"inputParam\" type=\"email\" id=\"mail\" name=\"mail\" value={this.state.newMail} onChange={this.handleMailChange}\r\n                disabled= {!this.state.changeMail} required />\r\n                <br/>\r\n                <input className=\"bouton_modifier\" id=\"modifMail\" type=\"button\" onClick={this.handleModifMail} value=\"Modifier\"/>\r\n                <br/>\r\n                <input className=\"bouton_modifier\" id=\"modifMdp\" type=\"button\" onClick={this.handleModifPass} value=\"Modifier mot de passe\"/>\r\n                <br/>\r\n                <input className=\"inputParamPass\" type=\"password\" id=\"newMdp\" name=\"newMdp\" placeholder=\"Nouveau mot de passe\" \r\n                disabled= {!this.state.changeMdp} onChange={this.handleChanges}/>\r\n                <br/>\r\n                <input className=\"inputParamPass\" type=\"password\" name=\"confirmNewMdp\" placeholder=\"Confirmez mot de passe\"\r\n                disabled= {!this.state.changeMdp} onChange={this.handleChanges}/>\r\n                <br/>\r\n                <input className=\"inputParamPass\" type=\"password\" id=\"mdp\" name=\"mdp\" placeholder=\"Mot de passe\" required onChange={this.handleChanges} value={this.state.mdp}/>\r\n                <br />\r\n                <input type=\"reset\" className=\"bouton_modifier\" id =\"reset\" value=\"Annuler\" onClick={this.handleReset} />\r\n                <input className=\"bouton_modifier\" id=\"save\" type=\"submit\" value=\"Sauvegarder\"/>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Parametre;","import './App.css';\nimport AccueilLoggedIn from './AccueilLoggedIn';\nimport Accueil from './Accueil';\nimport Header from './Header';\nimport HeaderLoggedIn from './HeaderLoggedIn';\nimport Inscription from './Inscription';\nimport React, { Component } from 'react';\n//import Agenda from './AccueilLoggedIn';\nimport Contact from './Contact';\nimport ForgotPass from './ForgotPass';\n// import Calendrier from './Calendrier';\nimport Parametre from './Parametre';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = ({\n      eventType: '',\n      menuOpened: false,\n      profilOpened: false,\n\n      prenom: '',\n      nom: '',\n      mail: '',\n\n      loggedIn: false,\n      inAccueil: true,\n      inInscription: false,\n      inForgotPass: false,\n      inContact: false,\n      inParams: false,      \n      \n    });\n  }\n\n  //Quand le composant est monté, il récupère l'état sauvegardé s'il existe\n  componentDidMount() {\n    let user = window.localStorage.getItem('userInfos');\n    if (user != null){\n      user = JSON.parse(user);\n      this.setState(user);\n    }\n  }\n\n  //Chaque fois que le composant est mis à jour, on enregistre l'état dans le stockage local\n  componentDidUpdate() {\n    let user = this.state;\n    window.localStorage.setItem('userInfos', JSON.stringify(user));\n  }\n\n  //Utilisée lors de la connexion pour enregistrer directement les informations dans l'état\n  setUserInfos = (prenom, nom, mail) => {\n    this.setState({ prenom, nom, mail });\n  }\n\n  //fonction permettant de remettre le state à 0 (lors d'une déconnexion par exemple)\n  clearState = () => {\n    this.setState({\n      eventType:'',\n      menuOpened: false,\n      profilOpened: false,\n      \n\n      prenom: '',\n      nom: '',\n      mail: '',\n\n      loggedIn: false,\n      inAccueil: true,\n      inInscription: false,\n      inForgotPass: false,\n      inContact: false,\n      inParams: false,\n    })\n  }\n\n  //Fonction pour gérer le status de l'utilisateur (connecté ou non)\n  handleLoginChange = (loggedIn) => {\n    this.setState({ loggedIn });\n    if (!loggedIn){\n      localStorage.clear();\n      this.clearState();\n      // this.handlePage({ inAccueil: true });\n    }\n  }\n\n  //Fonction qui gère le changement de pages\n  handlePage = (pages) => {\n    //tableau contenant toutes les props éventuelles de pages\n    const tab = [\"inAccueil\", \"inInscription\", \"inForgotPass\", \"inContact\", \"inParams\"];\n    \n    //on boucle sur les valeurs de l'objet pages. Si la prop est undefined, on la met a false:\n    //ça permet de pouvoir passer en argument seulement la page qu'on veut changer.\n    //on modifie l'état directement dans la boucle\n    for(let prop of tab){\n      pages[prop] = pages[prop] === undefined ? false : pages[prop];\n      this.setState({ [prop]: pages[prop] });\n    }\n  }\n\n  //Fonction pour partager l'état du menu entre la page et le header\n  handleMenusAccueil = (menuState) => {\n    //comme pour handlePage on fait un tableau pour modifier facilement le cas échéant\n    //la boucle permet de ne jamais ouvrir les deux menus en même temps\n    const tab = [\"menuOpened\", \"profilOpened\"];\n    for(let prop of tab){\n      menuState[prop] = menuState[prop] === undefined ? false : menuState[prop];\n      this.setState({ [prop]: menuState[prop] });\n    }\n  }\n\n  handleEventType = ({ eventType }) => {\n    console.log(\"App, type: \" + eventType);\n    this.setState({ eventType });\n  }\n\n  clearEventType = () => {\n    this.setState({\n      eventType: '',\n    })\n  }\n  \n  handleChangeParams = (newMail) =>{\n    this.setState({\n      mail: newMail,\n    })\n  }\n\n  //Quand le composant va être démonté, on s'assure de vider le stockage local\n  componentWillUnmount() {\n    localStorage.clear();\n  }\n\n  render(){\n    // const loggedIn = this.state.loggedIn;\n    // const inInscription = this.state.inInscription;\n    \n    const { nom, prenom, mail, loggedIn, inAccueil, inInscription, inForgotPass, inContact, inParams } = this.state;\n    let header = null;\n    let page = null;\n\n    loggedIn\n    ? header = (\n    <HeaderLoggedIn\n    prenom={prenom}\n    mail={mail}\n    disconnect={() => this.handleLoginChange(false)}\n    gotoMain={() => this.handlePage({ inAccueil: true })}\n    handlePage={this.handlePage}\n    handleMenus={this.handleMenusAccueil}\n    giveEventType={this.handleEventType}\n    />\n    )\n    : header = (\n    <Header \n    gotoMain={() => this.handlePage({ inAccueil: true })} />\n    );\n\n    if (inAccueil){\n      loggedIn\n      ? page = (\n      <AccueilLoggedIn\n      menuOpened={this.state.menuOpened}\n      profilOpened={this.state.profilOpened}\n      eventType={this.state.eventType}\n      clearEventType={this.clearEventType}\n      mail={this.state.mail}\n       />\n      // <Calendrier />\n      )\n      : page = (\n      <Accueil \n      handlePage={this.handlePage}\n      setUserInfos={this.setUserInfos}\n      connect={() => this.handleLoginChange(true)} />\n      );\n    }\n    if (inInscription){\n      page = (\n        <Inscription \n        gotoMain={() => this.handlePage({ inAccueil: true })} />\n      );\n    }\n    if (inForgotPass){\n      page = (\n        <ForgotPass />\n      );\n    }\n    if (inContact){\n      page = (\n        <Contact \n        prenom={prenom}\n        nom={nom}\n        mail={mail}\n        gotoMain={() => this.handlePage({ inAccueil: true })} />\n      );\n    }\n    \n    if (inParams){\n      page = (\n        <Parametre\n        mail={mail}\n        handleChangeParams = {this.handleChangeParams}\n        />\n      );\n    }\n\n    return(\n      <div className=\"App\">\n        {header}\n        {page}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import reportWebVitals from './reportWebVitals'\nimport App from './App';\n\n// import AgendaModal from './AgendaModal';\n// import ClickEventMenu from './ClickEventMenu';\n\nReactDOM.render(\n  <App />,\n  // <AgendaModal \n  // eventType=\"evenement\"\n  // />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}